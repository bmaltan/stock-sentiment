@use './styling/typography.scss';
@use './styling/colors.scss';
@use './styling/measurements.scss';
@use './styling/animations.scss';
@use './styling/material.scss';
@use "sass:map";

@include typography.typography;
@include material.styles;

* {
    font-family: 'Open Sans';
    transition: background measurements.$anim-duration;

    &:focus {
        outline: none;
    }
}

html, body {
    background: colors.$background;
    color: colors.$font;
    height: 100%;
    margin: 0;
}

.route-header {
    margin-bottom: 16px;

    .route-title {
        font-size: 20px;
        margin: 0;
        align-items: flex-end;

        .date {
            font-size: 20px;   
        }
    }

    @media only screen and (max-width: 700px) {
        .route-title {
            font-size: 20px !important;

            .date {
                font-size: 18px !important;
            }
        }
    }

    mat-icon {
        align-self: center;

        &:hover {
            transform: scale(measurements.$icon-hover-scale);
            transition: transform measurements.$anim-duration;
        }
    }
}

.platform-container {
    width: fit-content; 
    margin: auto;

    .platform-card {
        height: 90px;
        width: 100px;
        padding: measurements.$container-padding;
    
        border: colors.$border;
        box-shadow: colors.$container-shadow;
        border-radius: measurements.$container-border-radius;
        cursor: pointer;
        justify-items: right;
        transition: all measurements.$anim-duration measurements.$anim-type;

        &:hover {
            box-shadow: colors.$container-shadow-highlight;

            mat-icon {
                transition: transform measurements.$anim-duration measurements.$anim-type;
                transform: scale(1.05);
            }
        }

        &:active{
            box-shadow: colors.$container-shadow-pressed, colors.$container-shadow-highlight;
        }
    
        @each $platform, $color in colors.$platforms {
            &.#{$platform} {
                mat-icon {
                    color: map.get(colors.$platforms, $platform);
                    align-self: flex-end;
                }

                .platform-title {
                    color: map.get(colors.$platforms, $platform);
                    font-weight: 500;
                }

                &:hover {
                    filter: saturate(1.75);
                }
            }
        }
    }
}

.content-container {
    border: colors.$border;
    box-shadow: colors.$container-shadow;
    border-radius: measurements.$container-border-radius;
    overflow: hidden;

    &.no-border-radius {
        border-radius: 0;
    }
}

button {
    background: colors.$background;
    height: measurements.$input-height;
    border: colors.$border;
    padding: measurements.$input-padding;
    border-radius: measurements.$input-border-radius;
    cursor: pointer;

    &:active, &:focus {
        outline: none;
    }

    &:hover {
        background: darken(colors.$background, 10%);
    }

    &.primary {
        color: white;
        background: black;
        font-weight: bold;
        
        &:hover {
            background: lighten(black, 30%);
        }
    }

    &[disabled] {
        background: colors.$disabled;
        cursor: initial;
        
        &:hover {
            background: colors.$disabled;
        }
    }
}

table {
    width: 100%;
    border: none;

    thead {
        border: none;
        
        tr.mat-header-row {
            font-weight: 500;
            height: 44px;
        }
    }

    tr.mat-row {
        border: none;
        height: 42px;
    }
}

.flex-spacer {
    flex: 1;
}

.hide {
    transform: scale(0);
    width: 0 !important;
    height: 0 !important;
    position: fixed !important;
}

.filter-menu {
    .mat-menu-content {
        padding: 0 !important;
    }

    .filter-menu-content {
        padding: measurements.$container-padding;
        min-width: 180px;
    }
}